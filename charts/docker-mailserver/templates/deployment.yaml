---
apiVersion: "apps/v1"
kind: "Deployment"
metadata:
  labels:
    app.kubernetes.io/name: {{ template "dockermailserver.fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    heritage: "{{ .Release.Service }}"
    release: "{{ .Release.Name }}"
  name: {{ template "dockermailserver.fullname" . }}
{{- if .Values.deployment.annotations }}
  annotations:
{{ toYaml .Values.deployment.annotations | indent 4 }}
{{ end }}
spec:
  replicas: {{ default 2 .Values.deployment.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ template "dockermailserver.fullname" . }}
      release: "{{ .Release.Name }}"
  strategy: {{- toYaml .Values.pod.dockermailserver.strategy | nindent 4 }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ template "dockermailserver.fullname" . }}
        release: "{{ .Release.Name }}"
        {{- if .Values.pod.dockermailserver.annotations }}
      annotations:
{{ toYaml .Values.pod.dockermailserver.annotations | indent 8 }}
        {{ end }}
    spec:
      runtimeClassName: {{ .Values.runtimeClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
      serviceAccountName: {{ template "dockermailserver.serviceAccountName" . }}
      securityContext:
{{ toYaml .Values.securityContext | indent 8 }}
      volumes:
        - name: "data"
          persistentVolumeClaim:
            claimName: {{ template "dockermailserver.fullname" . }}
        - name: "config"
          emptyDir: {}
        - name: "configmap"
          configMap:
            name: {{ template "dockermailserver.fullname" . }}-configs
        - name: "secrets"
          secret:
            secretName: {{ template "dockermailserver.fullname" . }}-secrets
{{- if and .Values.pod.dockermailserver.env.SSL_TYPE .Values.ssl.useExisting }}
        - name: "ssl-cert"
          secret:
            secretName: {{ .Values.ssl.existingName }}
{{- end }}
{{- if .Values.additionalVolumes }}
{{ toYaml .Values.additionalVolumes | indent 8 }}
{{- end }}
        - name: tmp
          emptyDir: {}
      containers:
        - name: docker-mailserver
          env:
          {{- range $pkey, $pval := .Values.pod.dockermailserver.env }}
          - name: {{ $pkey }}
            value: {{ quote $pval }}
          {{- end }} 

          {{- if .Values.pod.dockermailserver.env.SSL_TYPE }}
          - name: SSL_CERT_PATH
            value: /tmp/dms/custom-certs/tls.crt
          - name: SSL_KEY_PATH
            value: /tmp/dms/custom-certs/tls.key
          {{- end }}

          image: {{ .Values.image.name }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
          securityContext:
            {{- if eq .Values.pod.dockermailserver.env.ENABLE_FAIL2BAN 1.0 }}
            capabilities:
              add:
                - "NET_ADMIN"
            {{ end }}
{{ toYaml .Values.pod.dockermailserver.containerSecurityContext | indent 12 }}
          volumeMounts:
            - name: config
              mountPath: /tmp/docker-mailserver
{{- if and .Values.pod.dockermailserver.env.SSL_TYPE .Values.ssl.useExisting }}
            - name: ssl-cert
              mountPath: /tmp/dms/custom-certs
              readOnly: true
{{- end }}
            - name: tmp
              mountPath: /var/tmp
{{ if .Values.metrics.enabled }}
            - name: data
              mountPath: /var/log/mail
              subPath: log
{{- end }}
            - name: data
              mountPath: /var/mail
              subPath: mail      
            - name: data
              mountPath: /var/mail-state
              subPath: mail-state

        {{- range $path, $content := .Files.Glob  "config/**" }}
          {{- if and (gt (len $content) 0) (not (contains "private" $path)) (not (contains "public" $path)) }}
            - name: configmap
              subPath: {{ $path | replace "/" "." }}
              mountPath: /tmp/docker-mailserver/{{ $path | trimPrefix  "config/" }}
              readOnly: true
          {{- end }}
       {{- end }}
            
        {{- range $path, $content := .Files.Glob  "config/**" }}
          {{- if and (gt (len $content) 0) (or (contains "private" $path) (contains "public" $path)) }}
            - name: secrets
              subPath: {{ $path | replace "/" "." }}
              mountPath: /tmp/docker-mailserver/{{ $path | trimPrefix  "config/" }}
              readOnly: true
          {{- end }}
       {{- end }}

            {{- if .Values.demoMode.enabled }}
            - name: opendkim-keys
              mountPath: "/tmp/docker-mailserver/opendkim/keys/example.com/mail.private"
              subPath: "example.com-mail.private"
              readOnly: true
            {{- end }}
{{- if .Values.additionalVolumeMounts }}
{{ toYaml .Values.additionalVolumeMounts | indent 12 }}
{{- end }}
          livenessProbe:
            exec:
               command:
                 - /bin/bash
                 - -c
                 - supervisorctl status | grep -E "amavis|clamav|cron|dovecot|mailserver|opendkim|opendmarc|postfix|rsyslog" | grep RUNNING
            initialDelaySeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            exec:
               command:
                 - /bin/bash
                 - -c
                 - supervisorctl status | grep -E "mailserver|postfix" | grep RUNNING
            initialDelaySeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
{{- if .Values.metrics.enabled }}
        - name: metrics-exporter
          image: {{ .Values.metrics.image.name }}:{{ .Values.metrics.image.tag }}
          imagePullPolicy: {{ .Values.metrics.image.pullPolicy }}
          command: ["/bin/postfix_exporter"]
          args: 
            - "--postfix.showq_path"
            - "/var/mail-state/spool-postfix/public/showq"
            - "--postfix.logfile_path"
            - "/var/log/mail/mail.log"

          ports:
            - containerPort: 9154
              name: http
              protocol: TCP
          resources:
{{ toYaml .Values.metrics.resources | indent 12 }}          
          securityContext:
{{ toYaml .Values.pod.dockermailserver.containerSecurityContext | indent 12 }}

          volumeMounts:
            - name: data
              mountPath: /var/log/mail
              subPath: log
              readOnly: true     
            - name: data
              mountPath: /var/mail-state
              subPath: mail-state
              readOnly: true
{{- end }}

      restartPolicy: "Always"