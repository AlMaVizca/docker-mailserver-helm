---
apiVersion: "apps/v1"
kind: "Deployment"
metadata:
  labels:
    app.kubernetes.io/name: {{ template "dockermailserver.fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    heritage: "{{ .Release.Service }}"
    release: "{{ .Release.Name }}"
  name: {{ template "dockermailserver.fullname" . }}
{{- if .Values.deployment.annotations }}
  annotations:
{{ toYaml .Values.deployment.annotations | indent 4 }}
{{ end }}
spec:
  replicas: {{ default 2 .Values.deployment.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ template "dockermailserver.fullname" . }}
      release: "{{ .Release.Name }}"
  strategy: {{- toYaml .Values.deployment.strategy | nindent 4 }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ template "dockermailserver.fullname" . }}
        release: "{{ .Release.Name }}"
        {{- if .Values.deployment.annotations }}
      annotations:
{{ toYaml .Values.deployment.annotations | indent 8 }}
        {{ end }}
    spec:
      runtimeClassName: {{ .Values.runtimeClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
      serviceAccountName: {{ template "dockermailserver.serviceAccountName" . }}
      securityContext:
{{ toYaml .Values.securityContext | indent 8 }}
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: {{ template "dockermailserver.fullname" . }}

      {{- if .Values.configs.installDefault }}
        # Default ConfigMap
        - name: {{ template "dockermailserver.fullname" . }}-configs
          configMap:
            name: {{ template "dockermailserver.fullname" . }}-configs
      {{- end }}

        # Custom ConfigMaps
      {{- range $config := .Values.configs.custom }}
        - name: {{ regexReplaceAll "[.]" $config.name "-" }}-config
          configMap:
            name: {{ $config.name }}
      {{- end }}

        # Default Secret
        - name: secrets
          secret:
            secretName: {{ template "dockermailserver.fullname" . }}-secrets

        # Custom Secrets
      {{- range $secret := .Values.secrets }}
        - name: {{ regexReplaceAll "[.]" $secret.name "-" }}-secret
          secret:
            secretName: {{ $secret.name }}
      {{- end }}

      {{- if .Values.certificate }}
        - name: certificate
          secret:
            secretName: {{ .Values.certificate }}
     {{- end }}

     {{- if .Values.additionalVolumes }}
        # Additional Volumes
{{ toYaml .Values.additionalVolumes | indent 8 }}
    {{- end }}

      containers:
        - name: docker-mailserver
          env:
          {{- range $pkey, $pval := .Values.deployment.env }}
          - name: {{ $pkey }}
            value: {{ quote $pval }}
          {{- end }} 

          {{- if .Values.certificate }}
          - name: SSL_TYPE
            value: manual
          - name: SSL_CERT_PATH
            value: /tmp/dms/custom-certs/tls.crt
          - name: SSL_KEY_PATH
            value: /tmp/dms/custom-certs/tls.key
          {{- end }}

          image: {{ .Values.image.name }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
          securityContext:
            {{- if eq .Values.deployment.env.ENABLE_FAIL2BAN 1.0 }}
            capabilities:
              add:
                - "NET_ADMIN"
            {{ end }}
{{ toYaml .Values.deployment.containerSecurityContext | indent 12 }}
          volumeMounts:
        {{- if .Values.certificate }}
            - name: certificate
              mountPath: /tmp/dms/custom-certs
              readOnly: true
        {{- end }}
        {{ if .Values.metrics.enabled }}
            - name: data
              mountPath: /var/log/mail
              subPath: log
        {{- end }}
            - name: data
              mountPath: /var/mail
              subPath: mail      
            - name: data
              mountPath: /var/mail-state
              subPath: mail-state

            ### Default ConfigMap ###
      {{- if .Values.configs.installDefault }}
        {{- /* Mount configuration files stored in the built-in ConfigMap into the container */}}
        {{- range $path, $content := .Files.Glob  "config/**" }}
          {{- if and (gt (len $content) 0) (not (contains "private" $path)) (not (contains "public" $path)) }}
            # {{ $path }}
            - name: {{ template "dockermailserver.fullname" $ }}-configs
              subPath: {{ regexReplaceAll "[^-_.\\w]" $path "." }}
              mountPath: /tmp/docker-mailserver/{{ $path | trimPrefix  "config/" }}
          {{- end }}
        {{- end }}
      {{- end }}

            ### Custom ConfigMaps ###
      {{- range $config := .Values.configs.custom }}
        {{- range $item := $config.data }}
            # {{ $item.subPath }}
            - name: {{ regexReplaceAll "[.]" $config.name "-" }}-config
              subPath: {{ $item.subPath }}
              mountPath: /tmp/docker-mailserver/{{ $item.mountPath }}
        {{- end }}
      {{- end }}

            ### Default Secret ###
        {{- range $path, $content := .Files.Glob  "config/**" }}
          {{- if and (gt (len $content) 0) (or (contains "private" $path) (contains "public" $path)) }}
            ### System defined secrets ###
            - name: secrets
              subPath: {{ regexReplaceAll "[^-_.\\w]" $path "." }}
              mountPath: /tmp/docker-mailserver/{{ $path | trimPrefix  "config/" }}
              readOnly: true
          {{- end }}
       {{- end }}

            ### Custom Secrets ###
      {{- range $secret := .Values.secrets }}
        {{- range $item := $secret.data }}
            # {{ $item.subPath }}
            - name: {{ regexReplaceAll "[.]" $secret.name "-" }}-secret
              subPath: {{ $item.subPath }}
              mountPath: /tmp/docker-mailserver/{{ $item.mountPath }}
        {{- end }}
      {{- end }}

      {{- if .Values.additionalVolumeMounts }}
        # Additional VolumeMounts
{{ toYaml .Values.additionalVolumeMounts | indent 12 }}
      {{- end }}
          livenessProbe:
            exec:
               command:
                 - /bin/bash
                 - -c
                 - supervisorctl status | grep -E "amavis|clamav|cron|dovecot|mailserver|opendkim|opendmarc|postfix|rsyslog" | grep RUNNING
            initialDelaySeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            exec:
               command:
                 - /bin/bash
                 - -c
                 - supervisorctl status | grep -E "mailserver|postfix" | grep RUNNING
            initialDelaySeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          ports:
            - name: smtp
              containerPort: 25

            - name: submissions
              containerPort: 465
            - name: submission
              containerPort: 587
          {{- if .Values.proxy_protocol.enabled }}
            - name: subs-proxy
              containerPort: 10465
            - name: sub-proxy
              containerPort: 10587
          {{- end }}   

        {{- if and (.Values.deployment.env.ENABLE_IMAP) (not .Values.deployment.env.SMTP_ONLY) }}
            - name: imap
              containerPort: 143
            - name: imaps
              containerPort: 993
          {{- if .Values.proxy_protocol.enabled }}
            - name: imap-proxy
              containerPort: 10143
            - name: imaps-proxy
              containerPort: 10993
          {{- end }}   
        {{- end }}   

        {{- if and (.Values.deployment.env.ENABLE_POP) (not .Values.deployment.env.SMTP_ONLY) }}
            - name: pop3
              containerPort: 110
            - name: pop3s
              containerPort: 995
          {{- if .Values.proxy_protocol.enabled }}
            - name: pop3-proxy
              containerPort: 10110
            - name: pop3s-proxy
              containerPort: 10995
          {{- end }}   
        {{- end }}  

        {{- if .Values.deployment.env.ENABLE_RSPAMD }}
            - name: rspamd
              containerPort: 11334  
        {{- end }}  

        {{- if and (.Values.deployment.env.ENABLE_MANAGESIEVE) (not .Values.deployment.env.SMTP_ONLY) }}
            - name: managesieve
              containerPort: 4190  
        {{- end }}  

{{- if .Values.metrics.enabled }}
        - name: metrics-exporter
          image: {{ .Values.metrics.image.name }}:{{ .Values.metrics.image.tag }}
          imagePullPolicy: {{ .Values.metrics.image.pullPolicy }}
          command: ["/bin/postfix_exporter"]
          args: 
            - "--postfix.showq_path"
            - "/var/mail-state/spool-postfix/public/showq"
            - "--postfix.logfile_path"
            - "/var/log/mail/mail.log"

          ports:
            - containerPort: 9154
              name: http
              protocol: TCP
          resources:
{{ toYaml .Values.metrics.resources | indent 12 }}          
          securityContext:
{{ toYaml .Values.deployment.containerSecurityContext | indent 12 }}

          volumeMounts:
            - name: data
              mountPath: /var/log/mail
              subPath: log
              readOnly: true     
            - name: data
              mountPath: /var/mail-state
              subPath: mail-state
              readOnly: true
{{- end }}

      restartPolicy: "Always"