---
apiVersion: "apps/v1"
kind: "Deployment"
metadata:
  labels:
    app.kubernetes.io/name: {{ template "dockermailserver.fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    heritage: "{{ .Release.Service }}"
    release: "{{ .Release.Name }}"
  name: {{ template "dockermailserver.fullname" . }}
{{- if .Values.deployment.annotations }}
  annotations:
{{ toYaml .Values.deployment.annotations | indent 4 }}
{{ end }}
spec:
  replicas: {{ default 2 .Values.deployment.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ template "dockermailserver.fullname" . }}
      release: "{{ .Release.Name }}"
  strategy: {{- toYaml .Values.deployment.strategy | nindent 4 }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ template "dockermailserver.fullname" . }}
        release: "{{ .Release.Name }}"
        {{- if .Values.deployment.annotations }}
      annotations:
{{ toYaml .Values.deployment.annotations | indent 8 }}
        {{ end }}
    spec:
      runtimeClassName: {{ .Values.deployment.runtimeClassName }}
      priorityClassName: {{ .Values.deployment.priorityClassName }}
      serviceAccountName: {{ template "dockermailserver.serviceAccountName" . }}
      securityContext:
{{ toYaml .Values.securityContext | indent 8 }}
      volumes:
          # ConfigMaps
      {{- range $config := .Values.configFiles }}
        - name: {{ regexReplaceAll "[.]" $config.name "-" }}
          configMap:
            name: {{ regexReplaceAll "[.]" $config.name "-" }}
      {{- end }}

        # Secrets
      {{- range $secret := .Values.secrets }}
        - name: {{ regexReplaceAll "[.]" $secret.name "-" }}
          secret:
            secretName: {{ regexReplaceAll "[.]" $secret.name "-" }}
      {{- end }}

        # Certificate
      {{- if .Values.certificate }}
        - name: certificate
          secret:
            secretName: {{ .Values.certificate }}
      {{- end }}

        # PVCs
    {{- range $name, $persistence := .Values.persistence }}
      {{- if $persistence.enabled }}
        - name: {{ $name }}
          persistentVolumeClaim:
            {{- if $persistence.existingClaim}}
            claimName: {{ $persistence.existingClaim }}
            {{ else }}
            claimName: {{ template "dockermailserver.fullname" $ }}-{{ $name }}
            {{ end }}
      {{- end }}
    {{- end }}

      containers:
        - name: docker-mailserver
          env:
          {{- range $pkey, $pval := .Values.deployment.env }}
          - name: {{ $pkey }}
            value: {{ quote $pval }}
          {{- end }} 

          {{- if .Values.certificate }}
          - name: SSL_TYPE
            value: manual
          - name: SSL_CERT_PATH
            value: /tmp/dms/custom-certs/tls.crt
          - name: SSL_KEY_PATH
            value: /tmp/dms/custom-certs/tls.key
          {{- end }}

          image: {{ .Values.image.name }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
          securityContext:
            {{- if eq .Values.deployment.env.ENABLE_FAIL2BAN 1.0 }}
            capabilities:
              add:
                - "NET_ADMIN"
            {{ end }}
{{ toYaml .Values.deployment.containerSecurityContext | indent 12 }}

          volumeMounts:
        {{- if .Values.certificate }}
            - name: certificate
              mountPath: /tmp/dms/custom-certs
              readOnly: true
        {{- end }}

            # ConfigFiles via ConfigMaps
        {{- range $config := .Values.configFiles }}
            - name: {{ regexReplaceAll "[.]" $config.name "-" }}
              subPath: {{ $config.key | default $config.path }}
              mountPath: /tmp/docker-mailserver/{{ $config.path }}
        {{- end }}

            # Config via Secrets
        {{- range $secret := .Values.secrets }}
            - name: {{ regexReplaceAll "[.]" $secret.name "-" }}
              subPath: {{ $secret.key | default $secret.path }}
              mountPath: /tmp/docker-mailserver/{{ $secret.path }}
        {{- end }}

          # Volumes
        {{- range $name, $persistence := .Values.persistence }}
          {{- if $persistence.enabled }}
            - name: {{ $name }}
              mountPath: {{ $persistence.mountPath }}
          {{- end }}
        {{- end }}

          livenessProbe:
            exec:
               command:
                 - /bin/bash
                 - -c
                 - supervisorctl status | grep -E "amavis|clamav|cron|dovecot|mailserver|opendkim|opendmarc|postfix|rsyslog" | grep RUNNING
            initialDelaySeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            exec:
               command:
                 - /bin/bash
                 - -c
                 - supervisorctl status | grep -E "mailserver|postfix" | grep RUNNING
            initialDelaySeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          ports:
            - name: smtp
              containerPort: 25

            - name: submissions
              containerPort: 465
            - name: submission
              containerPort: 587
          {{- if .Values.proxy_protocol.enabled }}
            - name: subs-proxy
              containerPort: 10465
            - name: sub-proxy
              containerPort: 10587
          {{- end }}   

        {{- if and (.Values.deployment.env.ENABLE_IMAP) (not .Values.deployment.env.SMTP_ONLY) }}
            - name: imap
              containerPort: 143
            - name: imaps
              containerPort: 993
          {{- if .Values.proxy_protocol.enabled }}
            - name: imap-proxy
              containerPort: 10143
            - name: imaps-proxy
              containerPort: 10993
          {{- end }}   
        {{- end }}   

        {{- if and (.Values.deployment.env.ENABLE_POP) (not .Values.deployment.env.SMTP_ONLY) }}
            - name: pop3
              containerPort: 110
            - name: pop3s
              containerPort: 995
          {{- if .Values.proxy_protocol.enabled }}
            - name: pop3-proxy
              containerPort: 10110
            - name: pop3s-proxy
              containerPort: 10995
          {{- end }}   
        {{- end }}  

        {{- if .Values.deployment.env.ENABLE_RSPAMD }}
            - name: rspamd
              containerPort: 11334  
        {{- end }}  

        {{- if and (.Values.deployment.env.ENABLE_MANAGESIEVE) (not .Values.deployment.env.SMTP_ONLY) }}
            - name: managesieve
              containerPort: 4190  
        {{- end }}  

{{- if .Values.metrics.enabled }}
        - name: metrics-exporter
          image: {{ .Values.metrics.image.name }}:{{ .Values.metrics.image.tag }}
          imagePullPolicy: {{ .Values.metrics.image.pullPolicy }}
          command: ["/bin/postfix_exporter"]
          args: 
            - "--postfix.showq_path"
            - "/var/mail-state/spool-postfix/public/showq"
            - "--postfix.logfile_path"
            - "/var/log/mail/mail.log"

          ports:
            - containerPort: 9154
              name: http
              protocol: TCP
          resources:
{{ toYaml .Values.metrics.resources | indent 12 }}          
          securityContext:
{{ toYaml .Values.deployment.containerSecurityContext | indent 12 }}

          volumeMounts:
            - name: data
              mountPath: /var/log/mail
              subPath: log
              readOnly: true     
            - name: data
              mountPath: /var/mail-state
              subPath: mail-state
              readOnly: true
{{- end }}

      restartPolicy: "Always"